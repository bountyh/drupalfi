<?php
/**
 * @file
 * Code for the Drupal Company feature.
 */

include_once 'drupal_company.features.inc';

/**
 * Implements hook_install().
 */
function drupal_company_install() {
  // Make sure all updates are ran when enabling module for first time.
  for ($i = 7001; $i < 8000; $i++) {
    $candidate = 'drupal_company_update_' . $i;
    if (function_exists($candidate)) {
      $candidate();
    }
  }
}

/**
 * Create new phonenumber field and migrate values from the old phone number field.
 * Delete an original field.
 */
function drupal_company_update_7001() {
  // Enable Entity API.
  module_enable(array('entity'));

  if (!field_info_field('field_contact_person_phone_numbe')) {
    return;
  }

  if (!field_info_field('field_contact_phone_number')) {
    field_create_field(array(
      'field_name' => 'field_contact_phone_number',
      'type' => 'text',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'translatable' => TRUE,
    ));

    field_create_instance(array(
      'entity_type' => 'node',
      'field_name' => 'field_contact_phone_number',
      'bundle' => 'company',
      'label' => st('Contact person phone number'),
      'widget' => array(
        'type' => 'text_textfield',
        'weight' => 20,
      ),
      'settings' => array(
        'max_length' => 255
      ),
      'instance_settings' => array(
        'text_processing' => FALSE
      ),
      'default_formatter' => 'text_default',
      'required' => FALSE,
    ));
  }

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'company');

  $results = $query->execute();

  if (!empty($results['node'])) {
    $nodes = node_load_multiple(array_keys($results['node']));

    foreach ($nodes as $node) {
      $wrapper = entity_metadata_wrapper('node', $node);

      $old_field = $wrapper->field_contact_person_phone_numbe->value();

      if (empty($old_field)) {
        continue;
      }
      foreach ($old_field as $delta => $value) {
        $wrapper->field_contact_phone_number[$delta]->set($value);
      }
      $wrapper->save();
    }
  }
  field_delete_field('field_contact_person_phone_numbe');
}
